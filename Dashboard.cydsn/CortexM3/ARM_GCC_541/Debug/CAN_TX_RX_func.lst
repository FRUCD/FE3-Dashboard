ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.thumb
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB63:
  27              		.file 1 "Generated_Source\\PSoC5\\CAN_TX_RX_func.c"
   1:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "CAN.h"
  25:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  27:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #include "can_manga.h"
  29:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  30:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #define buffer_LEN 8
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 2


  31:Generated_Source\PSoC5/CAN_TX_RX_func.c **** extern uint8_t can_buffer[];
  32:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /* `#END` */
  33:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  34:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  35:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  37:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
  38:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  39:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
  40:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  41:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  42:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  43:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  44:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
  45:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  46:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *           messages.
  47:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  48:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
  49:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Indication if message has been sent.
  50:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *   Define                             Description
  51:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  52:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  53:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
  54:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  56:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
  28              		.loc 1 56 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  57:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 i, j, shift;
  58:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 retry = 0u;
  59:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  41              		.loc 1 59 0
  42 0002 0121     		movs	r1, #1
  58:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  43              		.loc 1 58 0
  44 0004 0026     		movs	r6, #0
  60:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint32 regTemp;
  61:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  45              		.loc 1 62 0
  46 0006 5DE0     		b	.L2
  47              	.LVL2:
  48              	.L16:
  63:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
  64:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 3


  66:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
  67:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  68:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  49              		.loc 1 68 0
  50 0008 17F0030F 		tst	r7, #3
  51 000c 4DD1     		bne	.L3
  69:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
  70:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* Find free mailbox */
  71:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  72:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  52              		.loc 1 72 0
  53 000e 2F4B     		ldr	r3, .L22
  54 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  55 0012 3B42     		tst	r3, r7
  56 0014 49D1     		bne	.L3
  57              	.LVL3:
  73:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  74:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  75:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  76:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  77:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     {
  78:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         regTemp = 0u;
  79:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  80:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Set message parameters */
  81:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  58              		.loc 1 81 0
  59 0016 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  60 0018 0BB1     		cbz	r3, .L4
  82:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  83:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  61              		.loc 1 83 0
  62 001a 4FF40013 		mov	r3, #2097152
  63              	.L4:
  64              	.LVL4:
  84:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  85:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  86:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  65              		.loc 1 86 0
  66 001e 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  67              	.LVL5:
  68 0020 31B9     		cbnz	r1, .L5
  87:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  88:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  69              		.loc 1 88 0
  70 0022 2B49     		ldr	r1, .L22+4
  71 0024 01EB0211 		add	r1, r1, r2, lsl #4
  72 0028 0468     		ldr	r4, [r0]
  73 002a 6405     		lsls	r4, r4, #21
  74 002c 4C60     		str	r4, [r1, #4]
  75 002e 07E0     		b	.L6
  76              	.L5:
  89:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  90:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
  91:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  92:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  77              		.loc 1 92 0
  78 0030 43F48013 		orr	r3, r3, #1048576
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 4


  79              	.LVL6:
  93:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
  80              		.loc 1 93 0
  81 0034 2649     		ldr	r1, .L22+4
  82 0036 01EB0211 		add	r1, r1, r2, lsl #4
  83 003a 0468     		ldr	r4, [r0]
  84 003c E400     		lsls	r4, r4, #3
  85 003e 4C60     		str	r4, [r1, #4]
  86              	.L6:
  94:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
  95:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
  96:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
  87              		.loc 1 96 0
  88 0040 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  89 0044 BEF1070F 		cmp	lr, #7
  90 0048 02D8     		bhi	.L7
  97:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
  98:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
  91              		.loc 1 98 0
  92 004a 43EA0E4E 		orr	lr, r3, lr, lsl #16
  93              	.LVL7:
  94 004e 01E0     		b	.L8
  95              	.LVL8:
  96              	.L7:
  99:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 100:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         else
 101:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 102:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
  97              		.loc 1 102 0
  98 0050 43F4002E 		orr	lr, r3, #524288
  99              	.LVL9:
 100              	.L8:
 103:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 104:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 105:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 101              		.loc 1 105 0
 102 0054 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 103 0056 0BB1     		cbz	r3, .L9
 106:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 107:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 104              		.loc 1 107 0
 105 0058 4EF0040E 		orr	lr, lr, #4
 106              	.LVL10:
 107              	.L9:
 108:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 109:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 108              		.loc 1 110 0
 109 005c 0023     		movs	r3, #0
 110 005e 0FE0     		b	.L10
 111              	.LVL11:
 112              	.L14:
 111:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 112:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 113:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 113              		.loc 1 113 0
 114 0060 1B49     		ldr	r1, .L22+4
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 5


 115 0062 01EB0214 		add	r4, r1, r2, lsl #4
 116 0066 032B     		cmp	r3, #3
 117 0068 02D9     		bls	.L11
 118              		.loc 1 113 0 is_stmt 0 discriminator 1
 119 006a C3F10B01 		rsb	r1, r3, #11
 120 006e 01E0     		b	.L12
 121              	.L11:
 122              		.loc 1 113 0 discriminator 2
 123 0070 C3F10301 		rsb	r1, r3, #3
 124              	.L12:
 125              		.loc 1 113 0 discriminator 4
 126 0074 8568     		ldr	r5, [r0, #8]
 127 0076 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 128 0078 2144     		add	r1, r1, r4
 129 007a 0D72     		strb	r5, [r1, #8]
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 130              		.loc 1 110 0 is_stmt 1 discriminator 4
 131 007c 0133     		adds	r3, r3, #1
 132              	.LVL12:
 133 007e DBB2     		uxtb	r3, r3
 134              	.LVL13:
 135              	.L10:
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 136              		.loc 1 110 0 is_stmt 0 discriminator 2
 137 0080 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 138 0082 8B42     		cmp	r3, r1
 139 0084 01D2     		bcs	.L13
 110:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         {
 140              		.loc 1 110 0 discriminator 3
 141 0086 072B     		cmp	r3, #7
 142 0088 EAD9     		bls	.L14
 143              	.L13:
 114:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 115:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 116:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 117:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         }
 118:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 119:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Disable isr */
 120:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 144              		.loc 1 120 0 is_stmt 1
 145 008a 4FF48034 		mov	r4, #65536
 146 008e 114B     		ldr	r3, .L22+8
 147              	.LVL14:
 148 0090 1C60     		str	r4, [r3]
 121:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 122:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 123:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 149              		.loc 1 123 0
 150 0092 1101     		lsls	r1, r2, #4
 151 0094 0E4D     		ldr	r5, .L22+4
 152 0096 4EF40003 		orr	r3, lr, #8388608
 153 009a 43F00803 		orr	r3, r3, #8
 154 009e 4B51     		str	r3, [r1, r5]
 124:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 125:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 126:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 155              		.loc 1 126 0
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 6


 156 00a0 0123     		movs	r3, #1
 157 00a2 4B51     		str	r3, [r1, r5]
 127:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 128:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 129:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 130:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 131:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 132:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 133:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 134:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             else
 135:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             {
 136:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 137:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                             }
 138:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 139:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 140:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         /* Enable isr */
 141:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 158              		.loc 1 141 0
 159 00a4 0C4B     		ldr	r3, .L22+12
 160 00a6 1C60     		str	r4, [r3]
 161              	.LVL15:
 142:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 143:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 162              		.loc 1 143 0
 163 00a8 0021     		movs	r1, #0
 164              	.LVL16:
 165              	.L3:
 144:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     }
 145:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 146:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             shift <<= 1u;
 166              		.loc 1 146 0
 167 00aa 7B00     		lsls	r3, r7, #1
 168 00ac DFB2     		uxtb	r7, r3
 169              	.LVL17:
 147:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 170              		.loc 1 147 0
 171 00ae 31B1     		cbz	r1, .L15
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 172              		.loc 1 65 0 discriminator 2
 173 00b0 0132     		adds	r2, r2, #1
 174              	.LVL18:
 175 00b2 D2B2     		uxtb	r2, r2
 176              	.LVL19:
 177 00b4 01E0     		b	.L18
 178              	.LVL20:
 179              	.L20:
 180 00b6 0127     		movs	r7, #1
 181 00b8 0022     		movs	r2, #0
 182              	.L18:
 183              	.LVL21:
  65:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 184              		.loc 1 65 0 is_stmt 0 discriminator 1
 185 00ba 072A     		cmp	r2, #7
 186 00bc A4D9     		bls	.L16
 187              	.L15:
 148:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 149:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 break;
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 7


 150:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 151:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 152:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 188              		.loc 1 152 0 is_stmt 1
 189 00be 19B1     		cbz	r1, .L17
 153:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 154:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             break;
 155:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 156:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         else
 157:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 158:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             retry++;
 190              		.loc 1 158 0
 191 00c0 0136     		adds	r6, r6, #1
 192              	.LVL22:
 193 00c2 F6B2     		uxtb	r6, r6
 194              	.LVL23:
 195              	.L2:
  62:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 196              		.loc 1 62 0
 197 00c4 022E     		cmp	r6, #2
 198 00c6 F6D9     		bls	.L20
 199              	.L17:
 159:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 160:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 161:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 162:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     return (result);
 163:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 200              		.loc 1 163 0
 201 00c8 0846     		mov	r0, r1
 202              	.LVL24:
 203 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 204              	.LVL25:
 205              	.L23:
 206              		.align	2
 207              	.L22:
 208 00cc 08A00040 		.word	1073782792
 209 00d0 20A00040 		.word	1073782816
 210 00d4 80E100E0 		.word	-536813184
 211 00d8 00E100E0 		.word	-536813312
 212              		.cfi_endproc
 213              	.LFE63:
 214              		.size	CAN_SendMsg, .-CAN_SendMsg
 215              		.section	.text.CAN_TxCancel,"ax",%progbits
 216              		.align	2
 217              		.global	CAN_TxCancel
 218              		.thumb
 219              		.thumb_func
 220              		.type	CAN_TxCancel, %function
 221              	CAN_TxCancel:
 222              	.LFB64:
 164:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 165:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 166:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 168:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 169:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 170:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 8


 171:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 172:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 173:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 174:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 175:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 176:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 177:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 178:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 179:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 180:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 181:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 182:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 223              		.loc 1 182 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL26:
 183:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 229              		.loc 1 183 0
 230 0000 0728     		cmp	r0, #7
 231 0002 07D8     		bhi	.L24
 184:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 185:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 232              		.loc 1 185 0
 233 0004 0001     		lsls	r0, r0, #4
 234              	.LVL27:
 235 0006 044A     		ldr	r2, .L26
 236 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 237 000a 03F0FC03 		and	r3, r3, #252
 238 000e 43F00203 		orr	r3, r3, #2
 239 0012 8354     		strb	r3, [r0, r2]
 240              	.L24:
 241 0014 7047     		bx	lr
 242              	.L27:
 243 0016 00BF     		.align	2
 244              	.L26:
 245 0018 20A00040 		.word	1073782816
 246              		.cfi_endproc
 247              	.LFE64:
 248              		.size	CAN_TxCancel, .-CAN_TxCancel
 249              		.section	.text.CAN_SendMsgDash_status,"ax",%progbits
 250              		.align	2
 251              		.global	CAN_SendMsgDash_status
 252              		.thumb
 253              		.thumb_func
 254              		.type	CAN_SendMsgDash_status, %function
 255              	CAN_SendMsgDash_status:
 256              	.LFB65:
 186:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 187:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 188:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 189:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 190:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 191:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 192:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgDash_status
 193:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 9


 194:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 195:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 196:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 197:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 198:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 199:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 200:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 201:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 202:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 203:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 204:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 205:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 206:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 207:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 208:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 209:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 210:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 211:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgDash_status(void) 
 212:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 257              		.loc 1 212 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LVL28:
 213:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 214:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 215:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 216:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 263              		.loc 1 216 0
 264 0000 0F4B     		ldr	r3, .L35
 265 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 0004 13F0010F 		tst	r3, #1
 267 0008 17D1     		bne	.L34
 268 000a 0023     		movs	r3, #0
 269 000c 0CE0     		b	.L30
 270              	.LVL29:
 271              	.L33:
 272              	.LBB2:
 217:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 218:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 219:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 220:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 221:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 222:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 223:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 224:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 225:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_Dash_status_TRASMITTED` */
 226:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 uint8_t i;
 227:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 				for(i=0; i<buffer_LEN; i++)
 229:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_TX_DATA_BYTE(0,i) = can_buffer[i];
 273              		.loc 1 229 0
 274 000e 032B     		cmp	r3, #3
 275 0010 02D9     		bls	.L31
 276              		.loc 1 229 0 is_stmt 0 discriminator 1
 277 0012 C3F10B00 		rsb	r0, r3, #11
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 10


 278 0016 01E0     		b	.L32
 279              	.L31:
 280              		.loc 1 229 0 discriminator 2
 281 0018 C3F10300 		rsb	r0, r3, #3
 282              	.L32:
 283              		.loc 1 229 0 discriminator 4
 284 001c 094A     		ldr	r2, .L35+4
 285 001e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 286 0020 094A     		ldr	r2, .L35+8
 287 0022 1154     		strb	r1, [r2, r0]
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_TX_DATA_BYTE(0,i) = can_buffer[i];
 288              		.loc 1 228 0 is_stmt 1 discriminator 4
 289 0024 0133     		adds	r3, r3, #1
 290              	.LVL30:
 291 0026 DBB2     		uxtb	r3, r3
 292              	.LVL31:
 293              	.L30:
 228:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_TX_DATA_BYTE(0,i) = can_buffer[i];
 294              		.loc 1 228 0 is_stmt 0 discriminator 2
 295 0028 072B     		cmp	r3, #7
 296 002a F0D9     		bls	.L33
 230:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 231:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 232:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_Dash_status_CALLBACK
 233:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_Dash_status_Callback();
 234:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_Dash_status_CALLBACK */
 235:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 236:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 297              		.loc 1 236 0 is_stmt 1
 298 002c 044A     		ldr	r2, .L35
 299 002e 1368     		ldr	r3, [r2]
 300              	.LVL32:
 301 0030 43F00103 		orr	r3, r3, #1
 302 0034 1360     		str	r3, [r2]
 303              	.LBE2:
 213:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 304              		.loc 1 213 0
 305 0036 0020     		movs	r0, #0
 306 0038 7047     		bx	lr
 307              	.L34:
 221:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 308              		.loc 1 221 0
 309 003a 0120     		movs	r0, #1
 310              	.LVL33:
 237:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 238:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 239:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 240:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 241:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 311              		.loc 1 241 0
 312 003c 7047     		bx	lr
 313              	.L36:
 314 003e 00BF     		.align	2
 315              	.L35:
 316 0040 20A00040 		.word	1073782816
 317 0044 00000000 		.word	can_buffer
 318 0048 28A00040 		.word	1073782824
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 11


 319              		.cfi_endproc
 320              	.LFE65:
 321              		.size	CAN_SendMsgDash_status, .-CAN_SendMsgDash_status
 322              		.section	.text.CAN_SendMsgDash_cmd,"ax",%progbits
 323              		.align	2
 324              		.global	CAN_SendMsgDash_cmd
 325              		.thumb
 326              		.thumb_func
 327              		.type	CAN_SendMsgDash_cmd, %function
 328              	CAN_SendMsgDash_cmd:
 329              	.LFB66:
 242:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 243:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 244:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 245:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 246:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 247:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsgDash_cmd
 248:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 249:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 250:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 251:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 252:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 253:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 254:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 255:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 256:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 257:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 258:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 259:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 260:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 261:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 262:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 263:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 264:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 265:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 266:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsgDash_cmd(void) 
 267:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 330              		.loc 1 267 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LVL34:
 268:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 269:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 270:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 271:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 336              		.loc 1 271 0
 337 0000 0F4B     		ldr	r3, .L44
 338 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 339 0004 13F0010F 		tst	r3, #1
 340 0008 17D1     		bne	.L43
 341 000a 0023     		movs	r3, #0
 342 000c 0CE0     		b	.L39
 343              	.LVL35:
 344              	.L42:
 345              	.LBB3:
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 12


 272:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 273:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 274:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 275:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 276:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 277:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 278:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 279:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 280:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_Dash_cmd_TRASMITTED` */
 281:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 uint8_t i;
 282:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 				for(i=0; i<buffer_LEN; i++)
 284:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_TX_DATA_BYTE(1,i) = can_buffer[i];
 346              		.loc 1 284 0
 347 000e 032B     		cmp	r3, #3
 348 0010 02D9     		bls	.L40
 349              		.loc 1 284 0 is_stmt 0 discriminator 1
 350 0012 C3F10B00 		rsb	r0, r3, #11
 351 0016 01E0     		b	.L41
 352              	.L40:
 353              		.loc 1 284 0 discriminator 2
 354 0018 C3F10300 		rsb	r0, r3, #3
 355              	.L41:
 356              		.loc 1 284 0 discriminator 4
 357 001c 094A     		ldr	r2, .L44+4
 358 001e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 359 0020 094A     		ldr	r2, .L44+8
 360 0022 1154     		strb	r1, [r2, r0]
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_TX_DATA_BYTE(1,i) = can_buffer[i];
 361              		.loc 1 283 0 is_stmt 1 discriminator 4
 362 0024 0133     		adds	r3, r3, #1
 363              	.LVL36:
 364 0026 DBB2     		uxtb	r3, r3
 365              	.LVL37:
 366              	.L39:
 283:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_TX_DATA_BYTE(1,i) = can_buffer[i];
 367              		.loc 1 283 0 is_stmt 0 discriminator 2
 368 0028 072B     		cmp	r3, #7
 369 002a F0D9     		bls	.L42
 285:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 286:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 287:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_Dash_cmd_CALLBACK
 288:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_Dash_cmd_Callback();
 289:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_Dash_cmd_CALLBACK */
 290:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 291:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 370              		.loc 1 291 0 is_stmt 1
 371 002c 044A     		ldr	r2, .L44
 372 002e 1368     		ldr	r3, [r2]
 373              	.LVL38:
 374 0030 43F00103 		orr	r3, r3, #1
 375 0034 1360     		str	r3, [r2]
 376              	.LBE3:
 268:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 377              		.loc 1 268 0
 378 0036 0020     		movs	r0, #0
 379 0038 7047     		bx	lr
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 13


 380              	.L43:
 276:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 381              		.loc 1 276 0
 382 003a 0120     		movs	r0, #1
 383              	.LVL39:
 292:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 293:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 294:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 295:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 296:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 384              		.loc 1 296 0
 385 003c 7047     		bx	lr
 386              	.L45:
 387 003e 00BF     		.align	2
 388              	.L44:
 389 0040 30A00040 		.word	1073782832
 390 0044 00000000 		.word	can_buffer
 391 0048 38A00040 		.word	1073782840
 392              		.cfi_endproc
 393              	.LFE66:
 394              		.size	CAN_SendMsgDash_cmd, .-CAN_SendMsgDash_cmd
 395              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 396              		.align	2
 397              		.global	CAN_ReceiveMsg
 398              		.thumb
 399              		.thumb_func
 400              		.type	CAN_ReceiveMsg, %function
 401              	CAN_ReceiveMsg:
 402              	.LFB67:
 297:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 298:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 299:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 300:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 301:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 302:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 303:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 304:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 305:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 306:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 307:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 308:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 309:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 310:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 311:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 312:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 313:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 314:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 315:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 316:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 317:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 318:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 319:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 320:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 321:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 322:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 323:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 324:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 14


 325:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 326:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 327:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 328:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 329:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 330:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 331:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 332:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 333:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 334:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 335:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 336:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 337:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 338:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 339:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 340:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 341:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 342:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 343:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 344:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 345:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 346:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 347:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 348:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 349:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 350:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 351:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 352:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 353:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 354:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 355:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 356:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 357:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 358:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 359:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 360:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 361:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 362:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 363:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 364:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 365:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 366:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 367:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 368:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 369:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 370:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 371:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 372:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 373:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 374:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 375:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 376:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 377:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 378:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 379:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 380:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 381:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 15


 382:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 383:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 384:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 385:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 386:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 387:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 388:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 389:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 390:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 391:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 392:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 393:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 394:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 395:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 396:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 397:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 398:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 399:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 400:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 401:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 402:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 403:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 404:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 405:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 406:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 407:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 408:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 409:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 410:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 411:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 412:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 413:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 414:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 415:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 416:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 417:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 418:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 419:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 420:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 421:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 422:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 423:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 424:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 426:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 427:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 428:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 429:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 430:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 431:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 432:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 433:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 434:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 435:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 436:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 437:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 438:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 16


 439:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 440:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 441:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 442:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 443:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 444:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 445:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 446:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 447:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 448:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 449:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 450:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 451:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 452:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 453:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 454:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 455:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 456:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 457:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 458:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 459:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 460:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 461:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 462:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 463:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 464:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 465:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 466:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 467:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 468:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 469:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 470:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 471:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 472:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 473:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 474:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 475:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 476:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 477:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 478:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 479:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 480:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 481:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 482:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 483:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 484:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 485:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 486:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 487:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 488:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 489:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 490:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 491:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 492:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 493:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 494:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 495:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 17


 496:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 497:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 498:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 499:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 500:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 501:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 502:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 503:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 504:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 505:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 506:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 507:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 508:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 509:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 510:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 511:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 512:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 513:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 514:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 515:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 516:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 517:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 518:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 519:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 520:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 521:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 522:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 523:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 524:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 525:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 526:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 527:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 528:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 529:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 530:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 531:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 532:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 533:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 534:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 535:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 536:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 537:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 538:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 539:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 540:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 541:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 542:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 543:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 544:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 545:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 546:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 547:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 548:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 549:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 550:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 551:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 552:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 18


 553:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 554:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 555:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 556:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 557:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 558:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 559:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 560:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 561:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     /*******************************************************************************
 562:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 563:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     ********************************************************************************
 564:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 565:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Summary:
 566:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 567:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 568:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 569:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 570:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 571:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Parameters:
 572:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  None.
 573:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 574:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     * Return:
 575:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 576:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *   Define                             Description
 577:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 578:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 579:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *
 580:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     *******************************************************************************/
 581:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 582:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     {
 583:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 584:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 585:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 586:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 587:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 588:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 589:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 590:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 591:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 592:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 593:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             else
 594:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             {
 595:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 596:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 597:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 /* `#END` */
 598:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 599:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 600:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 601:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 602:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 603:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 604:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 605:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             }
 606:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 607:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         return (result);
 608:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     }
 609:Generated_Source\PSoC5/CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 19


 610:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 611:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 612:Generated_Source\PSoC5/CAN_TX_RX_func.c **** /*******************************************************************************
 613:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 614:Generated_Source\PSoC5/CAN_TX_RX_func.c **** ********************************************************************************
 615:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 616:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Summary:
 617:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 618:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 619:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 620:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 621:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Parameters:
 622:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 623:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 624:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Return:
 625:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  None.
 626:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 627:Generated_Source\PSoC5/CAN_TX_RX_func.c **** * Reentrant:
 628:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *  Depends on the Customer code.
 629:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *
 630:Generated_Source\PSoC5/CAN_TX_RX_func.c **** *******************************************************************************/
 631:Generated_Source\PSoC5/CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 632:Generated_Source\PSoC5/CAN_TX_RX_func.c **** {
 403              		.loc 1 632 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 8
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL40:
 408 0000 70B5     		push	{r4, r5, r6, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 4, -16
 411              		.cfi_offset 5, -12
 412              		.cfi_offset 6, -8
 413              		.cfi_offset 14, -4
 414 0002 82B0     		sub	sp, sp, #8
 415              		.cfi_def_cfa_offset 24
 633:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 634:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 416              		.loc 1 634 0
 417 0004 4601     		lsls	r6, r0, #5
 418 0006 114D     		ldr	r5, .L53
 419 0008 7419     		adds	r4, r6, r5
 420 000a 735D     		ldrb	r3, [r6, r5]	@ zero_extendqisi2
 421 000c 13F0010F 		tst	r3, #1
 422 0010 1AD0     		beq	.L46
 423              	.LBB4:
 635:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 636:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 637:Generated_Source\PSoC5/CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 638:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         {
 639:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 640:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 641:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 642:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             int ID = CAN_GET_RX_ID(rxMailbox);
 424              		.loc 1 642 0
 425 0012 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 426 0014 13F0100F 		tst	r3, #16
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 20


 427 0018 02D0     		beq	.L48
 428              		.loc 1 642 0 is_stmt 0 discriminator 1
 429 001a 6168     		ldr	r1, [r4, #4]
 430 001c C908     		lsrs	r1, r1, #3
 431 001e 01E0     		b	.L49
 432              	.L48:
 433              		.loc 1 642 0 discriminator 2
 434 0020 6168     		ldr	r1, [r4, #4]
 435 0022 490D     		lsrs	r1, r1, #21
 436              	.L49:
 437              	.LVL41:
 643:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             //CAN_RX_STRUCT test = CAN_RX[rxMailbox]; // is test always 0s?
 644:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             uint8_t data[8];
 645:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             int i = 0;
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             for (i = 0; i < 8; i++)
 438              		.loc 1 646 0 is_stmt 1 discriminator 4
 439 0024 0023     		movs	r3, #0
 440 0026 06E0     		b	.L50
 441              	.LVL42:
 442              	.L51:
 647:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 443              		.loc 1 647 0 discriminator 3
 444 0028 E218     		adds	r2, r4, r3
 445 002a 107A     		ldrb	r0, [r2, #8]	@ zero_extendqisi2
 446 002c 02AA     		add	r2, sp, #8
 447 002e 1A44     		add	r2, r2, r3
 448 0030 02F8080C 		strb	r0, [r2, #-8]
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 449              		.loc 1 646 0 discriminator 3
 450 0034 0133     		adds	r3, r3, #1
 451              	.LVL43:
 452              	.L50:
 646:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 data[i] = CAN_RX[rxMailbox].rxdata.byte[i];
 453              		.loc 1 646 0 is_stmt 0 discriminator 1
 454 0036 072B     		cmp	r3, #7
 455 0038 F6DD     		ble	.L51
 648:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 649:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             can_receive(data, ID);
 456              		.loc 1 649 0 is_stmt 1
 457 003a 6846     		mov	r0, sp
 458 003c FFF7FEFF 		bl	can_receive
 459              	.LVL44:
 650:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             
 651:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /*
 652:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             uint8_t rx_length, rx_index;
 653:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 654:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			rx_length = CAN_GET_DLC(rxMailbox); // gets length of message
 655:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 656:Generated_Source\PSoC5/CAN_TX_RX_func.c ****  			can_queue[can_tail].length = rx_length;
 657:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			can_queue[can_tail].id = CAN_GET_RX_ID(rxMailbox);
 658:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			can_queue[can_tail].millicounter = 0;
 659:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 660:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			for(rx_index = 0; rx_index < rx_length; rx_index++)
 661:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			{
 662:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 				can_queue[can_tail].data[rx_index] =
 663:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 					CAN_RX_DATA_BYTE(rxMailbox, rx_index);
 664:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			} // for all bytes, copy data to can_queue
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 21


 665:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 666:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			can_tail = (can_tail + 1) % CAN_QUEUE_LENGTH;
 667:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 668:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 			if(can_tail == can_head) // if need to roll queue
 669:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 				can_head = (can_head + 1) % CAN_QUEUE_LENGTH;
 670:Generated_Source\PSoC5/CAN_TX_RX_func.c ****              */
 671:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             /* `#END` */
 672:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 673:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 674:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 675:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 676:Generated_Source\PSoC5/CAN_TX_RX_func.c **** 
 677:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 678:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 460              		.loc 1 678 0
 461 0040 735D     		ldrb	r3, [r6, r5]	@ zero_extendqisi2
 462 0042 43F00103 		orr	r3, r3, #1
 463 0046 7355     		strb	r3, [r6, r5]
 464              	.L46:
 465              	.LBE4:
 679:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 680:Generated_Source\PSoC5/CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 681:Generated_Source\PSoC5/CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 682:Generated_Source\PSoC5/CAN_TX_RX_func.c ****         }
 683:Generated_Source\PSoC5/CAN_TX_RX_func.c **** }
 466              		.loc 1 683 0
 467 0048 02B0     		add	sp, sp, #8
 468              		.cfi_def_cfa_offset 16
 469              		@ sp needed
 470 004a 70BD     		pop	{r4, r5, r6, pc}
 471              	.L54:
 472              		.align	2
 473              	.L53:
 474 004c A0A00040 		.word	1073782944
 475              		.cfi_endproc
 476              	.LFE67:
 477              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 478              		.text
 479              	.Letext0:
 480              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 481              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 482              		.file 4 "Generated_Source\\PSoC5\\cytypes.h"
 483              		.file 5 "Generated_Source\\PSoC5\\CAN.h"
 484              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 485              		.file 7 "./can_manga.h"
 486              		.section	.debug_info,"",%progbits
 487              	.Ldebug_info0:
 488 0000 6D040000 		.4byte	0x46d
 489 0004 0400     		.2byte	0x4
 490 0006 00000000 		.4byte	.Ldebug_abbrev0
 491 000a 04       		.byte	0x4
 492 000b 01       		.uleb128 0x1
 493 000c 87020000 		.4byte	.LASF54
 494 0010 0C       		.byte	0xc
 495 0011 3C020000 		.4byte	.LASF55
 496 0015 13000000 		.4byte	.LASF56
 497 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 22


 498 001d 00000000 		.4byte	0
 499 0021 00000000 		.4byte	.Ldebug_line0
 500 0025 02       		.uleb128 0x2
 501 0026 01       		.byte	0x1
 502 0027 06       		.byte	0x6
 503 0028 54010000 		.4byte	.LASF0
 504 002c 03       		.uleb128 0x3
 505 002d F9000000 		.4byte	.LASF4
 506 0031 02       		.byte	0x2
 507 0032 1D       		.byte	0x1d
 508 0033 37000000 		.4byte	0x37
 509 0037 02       		.uleb128 0x2
 510 0038 01       		.byte	0x1
 511 0039 08       		.byte	0x8
 512 003a 46010000 		.4byte	.LASF1
 513 003e 02       		.uleb128 0x2
 514 003f 02       		.byte	0x2
 515 0040 05       		.byte	0x5
 516 0041 57000000 		.4byte	.LASF2
 517 0045 02       		.uleb128 0x2
 518 0046 02       		.byte	0x2
 519 0047 07       		.byte	0x7
 520 0048 9D010000 		.4byte	.LASF3
 521 004c 03       		.uleb128 0x3
 522 004d 32020000 		.4byte	.LASF5
 523 0051 02       		.byte	0x2
 524 0052 3F       		.byte	0x3f
 525 0053 57000000 		.4byte	0x57
 526 0057 02       		.uleb128 0x2
 527 0058 04       		.byte	0x4
 528 0059 05       		.byte	0x5
 529 005a D8000000 		.4byte	.LASF6
 530 005e 02       		.uleb128 0x2
 531 005f 04       		.byte	0x4
 532 0060 07       		.byte	0x7
 533 0061 E7000000 		.4byte	.LASF7
 534 0065 02       		.uleb128 0x2
 535 0066 08       		.byte	0x8
 536 0067 05       		.byte	0x5
 537 0068 B9000000 		.4byte	.LASF8
 538 006c 02       		.uleb128 0x2
 539 006d 08       		.byte	0x8
 540 006e 07       		.byte	0x7
 541 006f 60010000 		.4byte	.LASF9
 542 0073 04       		.uleb128 0x4
 543 0074 04       		.byte	0x4
 544 0075 05       		.byte	0x5
 545 0076 696E7400 		.ascii	"int\000"
 546 007a 02       		.uleb128 0x2
 547 007b 04       		.byte	0x4
 548 007c 07       		.byte	0x7
 549 007d 77010000 		.4byte	.LASF10
 550 0081 03       		.uleb128 0x3
 551 0082 9A000000 		.4byte	.LASF11
 552 0086 03       		.byte	0x3
 553 0087 18       		.byte	0x18
 554 0088 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 23


 555 008c 03       		.uleb128 0x3
 556 008d CD010000 		.4byte	.LASF12
 557 0091 03       		.byte	0x3
 558 0092 2C       		.byte	0x2c
 559 0093 4C000000 		.4byte	0x4c
 560 0097 05       		.uleb128 0x5
 561 0098 A2000000 		.4byte	.LASF13
 562 009c 04       		.byte	0x4
 563 009d 3801     		.2byte	0x138
 564 009f 37000000 		.4byte	0x37
 565 00a3 05       		.uleb128 0x5
 566 00a4 F9010000 		.4byte	.LASF14
 567 00a8 04       		.byte	0x4
 568 00a9 3A01     		.2byte	0x13a
 569 00ab 5E000000 		.4byte	0x5e
 570 00af 02       		.uleb128 0x2
 571 00b0 04       		.byte	0x4
 572 00b1 04       		.byte	0x4
 573 00b2 B3000000 		.4byte	.LASF15
 574 00b6 02       		.uleb128 0x2
 575 00b7 08       		.byte	0x8
 576 00b8 04       		.byte	0x4
 577 00b9 6B020000 		.4byte	.LASF16
 578 00bd 02       		.uleb128 0x2
 579 00be 01       		.byte	0x1
 580 00bf 08       		.byte	0x8
 581 00c0 B0010000 		.4byte	.LASF17
 582 00c4 05       		.uleb128 0x5
 583 00c5 00020000 		.4byte	.LASF18
 584 00c9 04       		.byte	0x4
 585 00ca E201     		.2byte	0x1e2
 586 00cc D0000000 		.4byte	0xd0
 587 00d0 06       		.uleb128 0x6
 588 00d1 97000000 		.4byte	0x97
 589 00d5 05       		.uleb128 0x5
 590 00d6 97010000 		.4byte	.LASF19
 591 00da 04       		.byte	0x4
 592 00db E401     		.2byte	0x1e4
 593 00dd E1000000 		.4byte	0xe1
 594 00e1 06       		.uleb128 0x6
 595 00e2 A3000000 		.4byte	0xa3
 596 00e6 02       		.uleb128 0x2
 597 00e7 08       		.byte	0x8
 598 00e8 04       		.byte	0x4
 599 00e9 33010000 		.4byte	.LASF20
 600 00ed 02       		.uleb128 0x2
 601 00ee 04       		.byte	0x4
 602 00ef 07       		.byte	0x7
 603 00f0 70000000 		.4byte	.LASF21
 604 00f4 07       		.uleb128 0x7
 605 00f5 08       		.byte	0x8
 606 00f6 05       		.byte	0x5
 607 00f7 6F       		.byte	0x6f
 608 00f8 09010000 		.4byte	0x109
 609 00fc 08       		.uleb128 0x8
 610 00fd 1A010000 		.4byte	.LASF23
 611 0101 05       		.byte	0x5
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 24


 612 0102 71       		.byte	0x71
 613 0103 09010000 		.4byte	0x109
 614 0107 00       		.byte	0
 615 0108 00       		.byte	0
 616 0109 09       		.uleb128 0x9
 617 010a 97000000 		.4byte	0x97
 618 010e 19010000 		.4byte	0x119
 619 0112 0A       		.uleb128 0xa
 620 0113 ED000000 		.4byte	0xed
 621 0117 07       		.byte	0x7
 622 0118 00       		.byte	0
 623 0119 03       		.uleb128 0x3
 624 011a 84010000 		.4byte	.LASF22
 625 011e 05       		.byte	0x5
 626 011f 72       		.byte	0x72
 627 0120 F4000000 		.4byte	0xf4
 628 0124 07       		.uleb128 0x7
 629 0125 08       		.byte	0x8
 630 0126 05       		.byte	0x5
 631 0127 75       		.byte	0x75
 632 0128 39010000 		.4byte	0x139
 633 012c 08       		.uleb128 0x8
 634 012d 1A010000 		.4byte	.LASF23
 635 0131 05       		.byte	0x5
 636 0132 77       		.byte	0x77
 637 0133 49010000 		.4byte	0x149
 638 0137 00       		.byte	0
 639 0138 00       		.byte	0
 640 0139 09       		.uleb128 0x9
 641 013a C4000000 		.4byte	0xc4
 642 013e 49010000 		.4byte	0x149
 643 0142 0A       		.uleb128 0xa
 644 0143 ED000000 		.4byte	0xed
 645 0147 07       		.byte	0x7
 646 0148 00       		.byte	0
 647 0149 06       		.uleb128 0x6
 648 014a 39010000 		.4byte	0x139
 649 014e 03       		.uleb128 0x3
 650 014f 48000000 		.4byte	.LASF24
 651 0153 05       		.byte	0x5
 652 0154 78       		.byte	0x78
 653 0155 24010000 		.4byte	0x124
 654 0159 07       		.uleb128 0x7
 655 015a 04       		.byte	0x4
 656 015b 05       		.byte	0x5
 657 015c 7B       		.byte	0x7b
 658 015d 6E010000 		.4byte	0x16e
 659 0161 08       		.uleb128 0x8
 660 0162 1A010000 		.4byte	.LASF23
 661 0166 05       		.byte	0x5
 662 0167 7D       		.byte	0x7d
 663 0168 7E010000 		.4byte	0x17e
 664 016c 00       		.byte	0
 665 016d 00       		.byte	0
 666 016e 09       		.uleb128 0x9
 667 016f C4000000 		.4byte	0xc4
 668 0173 7E010000 		.4byte	0x17e
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 25


 669 0177 0A       		.uleb128 0xa
 670 0178 ED000000 		.4byte	0xed
 671 017c 03       		.byte	0x3
 672 017d 00       		.byte	0
 673 017e 06       		.uleb128 0x6
 674 017f 6E010000 		.4byte	0x16e
 675 0183 03       		.uleb128 0x3
 676 0184 C7000000 		.4byte	.LASF25
 677 0188 05       		.byte	0x5
 678 0189 7E       		.byte	0x7e
 679 018a 59010000 		.4byte	0x159
 680 018e 07       		.uleb128 0x7
 681 018f 0C       		.byte	0xc
 682 0190 05       		.byte	0x5
 683 0191 81       		.byte	0x81
 684 0192 DE010000 		.4byte	0x1de
 685 0196 0B       		.uleb128 0xb
 686 0197 696400   		.ascii	"id\000"
 687 019a 05       		.byte	0x5
 688 019b 83       		.byte	0x83
 689 019c A3000000 		.4byte	0xa3
 690 01a0 00       		.byte	0
 691 01a1 0B       		.uleb128 0xb
 692 01a2 72747200 		.ascii	"rtr\000"
 693 01a6 05       		.byte	0x5
 694 01a7 84       		.byte	0x84
 695 01a8 97000000 		.4byte	0x97
 696 01ac 04       		.byte	0x4
 697 01ad 0B       		.uleb128 0xb
 698 01ae 69646500 		.ascii	"ide\000"
 699 01b2 05       		.byte	0x5
 700 01b3 85       		.byte	0x85
 701 01b4 97000000 		.4byte	0x97
 702 01b8 05       		.byte	0x5
 703 01b9 0B       		.uleb128 0xb
 704 01ba 646C6300 		.ascii	"dlc\000"
 705 01be 05       		.byte	0x5
 706 01bf 86       		.byte	0x86
 707 01c0 97000000 		.4byte	0x97
 708 01c4 06       		.byte	0x6
 709 01c5 0B       		.uleb128 0xb
 710 01c6 69727100 		.ascii	"irq\000"
 711 01ca 05       		.byte	0x5
 712 01cb 87       		.byte	0x87
 713 01cc 97000000 		.4byte	0x97
 714 01d0 07       		.byte	0x7
 715 01d1 0B       		.uleb128 0xb
 716 01d2 6D736700 		.ascii	"msg\000"
 717 01d6 05       		.byte	0x5
 718 01d7 8B       		.byte	0x8b
 719 01d8 DE010000 		.4byte	0x1de
 720 01dc 08       		.byte	0x8
 721 01dd 00       		.byte	0
 722 01de 0C       		.uleb128 0xc
 723 01df 04       		.byte	0x4
 724 01e0 19010000 		.4byte	0x119
 725 01e4 03       		.uleb128 0x3
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 26


 726 01e5 0D020000 		.4byte	.LASF26
 727 01e9 05       		.byte	0x5
 728 01ea 8C       		.byte	0x8c
 729 01eb 8E010000 		.4byte	0x18e
 730 01ef 07       		.uleb128 0x7
 731 01f0 20       		.byte	0x20
 732 01f1 05       		.byte	0x5
 733 01f2 A0       		.byte	0xa0
 734 01f3 4C020000 		.4byte	0x24c
 735 01f7 08       		.uleb128 0x8
 736 01f8 D5010000 		.4byte	.LASF27
 737 01fc 05       		.byte	0x5
 738 01fd A2       		.byte	0xa2
 739 01fe 83010000 		.4byte	0x183
 740 0202 00       		.byte	0
 741 0203 08       		.uleb128 0x8
 742 0204 A8000000 		.4byte	.LASF28
 743 0208 05       		.byte	0x5
 744 0209 A3       		.byte	0xa3
 745 020a 83010000 		.4byte	0x183
 746 020e 04       		.byte	0x4
 747 020f 08       		.uleb128 0x8
 748 0210 80000000 		.4byte	.LASF29
 749 0214 05       		.byte	0x5
 750 0215 A4       		.byte	0xa4
 751 0216 4E010000 		.4byte	0x14e
 752 021a 08       		.byte	0x8
 753 021b 08       		.uleb128 0x8
 754 021c 15030000 		.4byte	.LASF30
 755 0220 05       		.byte	0x5
 756 0221 A5       		.byte	0xa5
 757 0222 83010000 		.4byte	0x183
 758 0226 10       		.byte	0x10
 759 0227 08       		.uleb128 0x8
 760 0228 AD000000 		.4byte	.LASF31
 761 022c 05       		.byte	0x5
 762 022d A6       		.byte	0xa6
 763 022e 83010000 		.4byte	0x183
 764 0232 14       		.byte	0x14
 765 0233 08       		.uleb128 0x8
 766 0234 3F010000 		.4byte	.LASF32
 767 0238 05       		.byte	0x5
 768 0239 A7       		.byte	0xa7
 769 023a 83010000 		.4byte	0x183
 770 023e 18       		.byte	0x18
 771 023f 08       		.uleb128 0x8
 772 0240 64020000 		.4byte	.LASF33
 773 0244 05       		.byte	0x5
 774 0245 A8       		.byte	0xa8
 775 0246 83010000 		.4byte	0x183
 776 024a 1C       		.byte	0x1c
 777 024b 00       		.byte	0
 778 024c 03       		.uleb128 0x3
 779 024d B5010000 		.4byte	.LASF34
 780 0251 05       		.byte	0x5
 781 0252 A9       		.byte	0xa9
 782 0253 EF010000 		.4byte	0x1ef
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 27


 783 0257 07       		.uleb128 0x7
 784 0258 10       		.byte	0x10
 785 0259 05       		.byte	0x5
 786 025a AC       		.byte	0xac
 787 025b 84020000 		.4byte	0x284
 788 025f 08       		.uleb128 0x8
 789 0260 D2000000 		.4byte	.LASF35
 790 0264 05       		.byte	0x5
 791 0265 AE       		.byte	0xae
 792 0266 83010000 		.4byte	0x183
 793 026a 00       		.byte	0
 794 026b 08       		.uleb128 0x8
 795 026c 2D020000 		.4byte	.LASF36
 796 0270 05       		.byte	0x5
 797 0271 AF       		.byte	0xaf
 798 0272 83010000 		.4byte	0x183
 799 0276 04       		.byte	0x4
 800 0277 08       		.uleb128 0x8
 801 0278 79000000 		.4byte	.LASF37
 802 027c 05       		.byte	0x5
 803 027d B0       		.byte	0xb0
 804 027e 4E010000 		.4byte	0x14e
 805 0282 08       		.byte	0x8
 806 0283 00       		.byte	0
 807 0284 03       		.uleb128 0x3
 808 0285 E0010000 		.4byte	.LASF38
 809 0289 05       		.byte	0x5
 810 028a B1       		.byte	0xb1
 811 028b 57020000 		.4byte	0x257
 812 028f 09       		.uleb128 0x9
 813 0290 81000000 		.4byte	0x81
 814 0294 9F020000 		.4byte	0x29f
 815 0298 0A       		.uleb128 0xa
 816 0299 ED000000 		.4byte	0xed
 817 029d 07       		.byte	0x7
 818 029e 00       		.byte	0
 819 029f 0D       		.uleb128 0xd
 820 02a0 18020000 		.4byte	.LASF45
 821 02a4 01       		.byte	0x1
 822 02a5 37       		.byte	0x37
 823 02a6 97000000 		.4byte	0x97
 824 02aa 00000000 		.4byte	.LFB63
 825 02ae DC000000 		.4byte	.LFE63-.LFB63
 826 02b2 01       		.uleb128 0x1
 827 02b3 9C       		.byte	0x9c
 828 02b4 1E030000 		.4byte	0x31e
 829 02b8 0E       		.uleb128 0xe
 830 02b9 05020000 		.4byte	.LASF43
 831 02bd 01       		.byte	0x1
 832 02be 37       		.byte	0x37
 833 02bf 1E030000 		.4byte	0x31e
 834 02c3 00000000 		.4byte	.LLST0
 835 02c7 0F       		.uleb128 0xf
 836 02c8 6900     		.ascii	"i\000"
 837 02ca 01       		.byte	0x1
 838 02cb 39       		.byte	0x39
 839 02cc 97000000 		.4byte	0x97
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 28


 840 02d0 21000000 		.4byte	.LLST1
 841 02d4 0F       		.uleb128 0xf
 842 02d5 6A00     		.ascii	"j\000"
 843 02d7 01       		.byte	0x1
 844 02d8 39       		.byte	0x39
 845 02d9 97000000 		.4byte	0x97
 846 02dd 4A000000 		.4byte	.LLST2
 847 02e1 10       		.uleb128 0x10
 848 02e2 E1000000 		.4byte	.LASF39
 849 02e6 01       		.byte	0x1
 850 02e7 39       		.byte	0x39
 851 02e8 97000000 		.4byte	0x97
 852 02ec 74000000 		.4byte	.LLST3
 853 02f0 10       		.uleb128 0x10
 854 02f1 94000000 		.4byte	.LASF40
 855 02f5 01       		.byte	0x1
 856 02f6 3A       		.byte	0x3a
 857 02f7 97000000 		.4byte	0x97
 858 02fb 92000000 		.4byte	.LLST4
 859 02ff 10       		.uleb128 0x10
 860 0300 0C000000 		.4byte	.LASF41
 861 0304 01       		.byte	0x1
 862 0305 3B       		.byte	0x3b
 863 0306 97000000 		.4byte	0x97
 864 030a BC000000 		.4byte	.LLST5
 865 030e 10       		.uleb128 0x10
 866 030f 72020000 		.4byte	.LASF42
 867 0313 01       		.byte	0x1
 868 0314 3C       		.byte	0x3c
 869 0315 A3000000 		.4byte	0xa3
 870 0319 F2000000 		.4byte	.LLST6
 871 031d 00       		.byte	0
 872 031e 0C       		.uleb128 0xc
 873 031f 04       		.byte	0x4
 874 0320 24030000 		.4byte	0x324
 875 0324 11       		.uleb128 0x11
 876 0325 E4010000 		.4byte	0x1e4
 877 0329 12       		.uleb128 0x12
 878 032a 87000000 		.4byte	.LASF48
 879 032e 01       		.byte	0x1
 880 032f B5       		.byte	0xb5
 881 0330 00000000 		.4byte	.LFB64
 882 0334 1C000000 		.4byte	.LFE64-.LFB64
 883 0338 01       		.uleb128 0x1
 884 0339 9C       		.byte	0x9c
 885 033a 4E030000 		.4byte	0x34e
 886 033e 0E       		.uleb128 0xe
 887 033f 24020000 		.4byte	.LASF44
 888 0343 01       		.byte	0x1
 889 0344 B5       		.byte	0xb5
 890 0345 97000000 		.4byte	0x97
 891 0349 32010000 		.4byte	.LLST7
 892 034d 00       		.byte	0
 893 034e 0D       		.uleb128 0xd
 894 034f 03010000 		.4byte	.LASF46
 895 0353 01       		.byte	0x1
 896 0354 D3       		.byte	0xd3
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 29


 897 0355 97000000 		.4byte	0x97
 898 0359 00000000 		.4byte	.LFB65
 899 035d 4C000000 		.4byte	.LFE65-.LFB65
 900 0361 01       		.uleb128 0x1
 901 0362 9C       		.byte	0x9c
 902 0363 8E030000 		.4byte	0x38e
 903 0367 10       		.uleb128 0x10
 904 0368 0C000000 		.4byte	.LASF41
 905 036c 01       		.byte	0x1
 906 036d D5       		.byte	0xd5
 907 036e 97000000 		.4byte	0x97
 908 0372 53010000 		.4byte	.LLST8
 909 0376 13       		.uleb128 0x13
 910 0377 0E000000 		.4byte	.LBB2
 911 037b 28000000 		.4byte	.LBE2-.LBB2
 912 037f 0F       		.uleb128 0xf
 913 0380 6900     		.ascii	"i\000"
 914 0382 01       		.byte	0x1
 915 0383 E2       		.byte	0xe2
 916 0384 81000000 		.4byte	0x81
 917 0388 72010000 		.4byte	.LLST9
 918 038c 00       		.byte	0
 919 038d 00       		.byte	0
 920 038e 14       		.uleb128 0x14
 921 038f 1F010000 		.4byte	.LASF47
 922 0393 01       		.byte	0x1
 923 0394 0A01     		.2byte	0x10a
 924 0396 97000000 		.4byte	0x97
 925 039a 00000000 		.4byte	.LFB66
 926 039e 4C000000 		.4byte	.LFE66-.LFB66
 927 03a2 01       		.uleb128 0x1
 928 03a3 9C       		.byte	0x9c
 929 03a4 D1030000 		.4byte	0x3d1
 930 03a8 15       		.uleb128 0x15
 931 03a9 0C000000 		.4byte	.LASF41
 932 03ad 01       		.byte	0x1
 933 03ae 0C01     		.2byte	0x10c
 934 03b0 97000000 		.4byte	0x97
 935 03b4 90010000 		.4byte	.LLST10
 936 03b8 13       		.uleb128 0x13
 937 03b9 0E000000 		.4byte	.LBB3
 938 03bd 28000000 		.4byte	.LBE3-.LBB3
 939 03c1 16       		.uleb128 0x16
 940 03c2 6900     		.ascii	"i\000"
 941 03c4 01       		.byte	0x1
 942 03c5 1901     		.2byte	0x119
 943 03c7 81000000 		.4byte	0x81
 944 03cb AF010000 		.4byte	.LLST11
 945 03cf 00       		.byte	0
 946 03d0 00       		.byte	0
 947 03d1 17       		.uleb128 0x17
 948 03d2 61000000 		.4byte	.LASF49
 949 03d6 01       		.byte	0x1
 950 03d7 7702     		.2byte	0x277
 951 03d9 00000000 		.4byte	.LFB67
 952 03dd 50000000 		.4byte	.LFE67-.LFB67
 953 03e1 01       		.uleb128 0x1
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 30


 954 03e2 9C       		.byte	0x9c
 955 03e3 3E040000 		.4byte	0x43e
 956 03e7 18       		.uleb128 0x18
 957 03e8 C3010000 		.4byte	.LASF50
 958 03ec 01       		.byte	0x1
 959 03ed 7702     		.2byte	0x277
 960 03ef 97000000 		.4byte	0x97
 961 03f3 CD010000 		.4byte	.LLST12
 962 03f7 13       		.uleb128 0x13
 963 03f8 12000000 		.4byte	.LBB4
 964 03fc 36000000 		.4byte	.LBE4-.LBB4
 965 0400 16       		.uleb128 0x16
 966 0401 494400   		.ascii	"ID\000"
 967 0404 01       		.byte	0x1
 968 0405 8202     		.2byte	0x282
 969 0407 73000000 		.4byte	0x73
 970 040b EE010000 		.4byte	.LLST13
 971 040f 19       		.uleb128 0x19
 972 0410 DB010000 		.4byte	.LASF51
 973 0414 01       		.byte	0x1
 974 0415 8402     		.2byte	0x284
 975 0417 8F020000 		.4byte	0x28f
 976 041b 02       		.uleb128 0x2
 977 041c 91       		.byte	0x91
 978 041d 68       		.sleb128 -24
 979 041e 16       		.uleb128 0x16
 980 041f 6900     		.ascii	"i\000"
 981 0421 01       		.byte	0x1
 982 0422 8502     		.2byte	0x285
 983 0424 73000000 		.4byte	0x73
 984 0428 01020000 		.4byte	.LLST14
 985 042c 1A       		.uleb128 0x1a
 986 042d 40000000 		.4byte	.LVL44
 987 0431 65040000 		.4byte	0x465
 988 0435 1B       		.uleb128 0x1b
 989 0436 01       		.uleb128 0x1
 990 0437 50       		.byte	0x50
 991 0438 02       		.uleb128 0x2
 992 0439 7D       		.byte	0x7d
 993 043a 00       		.sleb128 0
 994 043b 00       		.byte	0
 995 043c 00       		.byte	0
 996 043d 00       		.byte	0
 997 043e 1C       		.uleb128 0x1c
 998 043f 7A020000 		.4byte	.LASF52
 999 0443 06       		.byte	0x6
 1000 0444 5506     		.2byte	0x655
 1001 0446 4A040000 		.4byte	0x44a
 1002 044a 06       		.uleb128 0x6
 1003 044b 8C000000 		.4byte	0x8c
 1004 044f 09       		.uleb128 0x9
 1005 0450 81000000 		.4byte	0x81
 1006 0454 5A040000 		.4byte	0x45a
 1007 0458 1D       		.uleb128 0x1d
 1008 0459 00       		.byte	0
 1009 045a 1E       		.uleb128 0x1e
 1010 045b EE010000 		.4byte	.LASF53
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 31


 1011 045f 01       		.byte	0x1
 1012 0460 1F       		.byte	0x1f
 1013 0461 4F040000 		.4byte	0x44f
 1014 0465 1F       		.uleb128 0x1f
 1015 0466 00000000 		.4byte	.LASF57
 1016 046a 00000000 		.4byte	.LASF57
 1017 046e 07       		.byte	0x7
 1018 046f 14       		.byte	0x14
 1019 0470 00       		.byte	0
 1020              		.section	.debug_abbrev,"",%progbits
 1021              	.Ldebug_abbrev0:
 1022 0000 01       		.uleb128 0x1
 1023 0001 11       		.uleb128 0x11
 1024 0002 01       		.byte	0x1
 1025 0003 25       		.uleb128 0x25
 1026 0004 0E       		.uleb128 0xe
 1027 0005 13       		.uleb128 0x13
 1028 0006 0B       		.uleb128 0xb
 1029 0007 03       		.uleb128 0x3
 1030 0008 0E       		.uleb128 0xe
 1031 0009 1B       		.uleb128 0x1b
 1032 000a 0E       		.uleb128 0xe
 1033 000b 55       		.uleb128 0x55
 1034 000c 17       		.uleb128 0x17
 1035 000d 11       		.uleb128 0x11
 1036 000e 01       		.uleb128 0x1
 1037 000f 10       		.uleb128 0x10
 1038 0010 17       		.uleb128 0x17
 1039 0011 00       		.byte	0
 1040 0012 00       		.byte	0
 1041 0013 02       		.uleb128 0x2
 1042 0014 24       		.uleb128 0x24
 1043 0015 00       		.byte	0
 1044 0016 0B       		.uleb128 0xb
 1045 0017 0B       		.uleb128 0xb
 1046 0018 3E       		.uleb128 0x3e
 1047 0019 0B       		.uleb128 0xb
 1048 001a 03       		.uleb128 0x3
 1049 001b 0E       		.uleb128 0xe
 1050 001c 00       		.byte	0
 1051 001d 00       		.byte	0
 1052 001e 03       		.uleb128 0x3
 1053 001f 16       		.uleb128 0x16
 1054 0020 00       		.byte	0
 1055 0021 03       		.uleb128 0x3
 1056 0022 0E       		.uleb128 0xe
 1057 0023 3A       		.uleb128 0x3a
 1058 0024 0B       		.uleb128 0xb
 1059 0025 3B       		.uleb128 0x3b
 1060 0026 0B       		.uleb128 0xb
 1061 0027 49       		.uleb128 0x49
 1062 0028 13       		.uleb128 0x13
 1063 0029 00       		.byte	0
 1064 002a 00       		.byte	0
 1065 002b 04       		.uleb128 0x4
 1066 002c 24       		.uleb128 0x24
 1067 002d 00       		.byte	0
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 32


 1068 002e 0B       		.uleb128 0xb
 1069 002f 0B       		.uleb128 0xb
 1070 0030 3E       		.uleb128 0x3e
 1071 0031 0B       		.uleb128 0xb
 1072 0032 03       		.uleb128 0x3
 1073 0033 08       		.uleb128 0x8
 1074 0034 00       		.byte	0
 1075 0035 00       		.byte	0
 1076 0036 05       		.uleb128 0x5
 1077 0037 16       		.uleb128 0x16
 1078 0038 00       		.byte	0
 1079 0039 03       		.uleb128 0x3
 1080 003a 0E       		.uleb128 0xe
 1081 003b 3A       		.uleb128 0x3a
 1082 003c 0B       		.uleb128 0xb
 1083 003d 3B       		.uleb128 0x3b
 1084 003e 05       		.uleb128 0x5
 1085 003f 49       		.uleb128 0x49
 1086 0040 13       		.uleb128 0x13
 1087 0041 00       		.byte	0
 1088 0042 00       		.byte	0
 1089 0043 06       		.uleb128 0x6
 1090 0044 35       		.uleb128 0x35
 1091 0045 00       		.byte	0
 1092 0046 49       		.uleb128 0x49
 1093 0047 13       		.uleb128 0x13
 1094 0048 00       		.byte	0
 1095 0049 00       		.byte	0
 1096 004a 07       		.uleb128 0x7
 1097 004b 13       		.uleb128 0x13
 1098 004c 01       		.byte	0x1
 1099 004d 0B       		.uleb128 0xb
 1100 004e 0B       		.uleb128 0xb
 1101 004f 3A       		.uleb128 0x3a
 1102 0050 0B       		.uleb128 0xb
 1103 0051 3B       		.uleb128 0x3b
 1104 0052 0B       		.uleb128 0xb
 1105 0053 01       		.uleb128 0x1
 1106 0054 13       		.uleb128 0x13
 1107 0055 00       		.byte	0
 1108 0056 00       		.byte	0
 1109 0057 08       		.uleb128 0x8
 1110 0058 0D       		.uleb128 0xd
 1111 0059 00       		.byte	0
 1112 005a 03       		.uleb128 0x3
 1113 005b 0E       		.uleb128 0xe
 1114 005c 3A       		.uleb128 0x3a
 1115 005d 0B       		.uleb128 0xb
 1116 005e 3B       		.uleb128 0x3b
 1117 005f 0B       		.uleb128 0xb
 1118 0060 49       		.uleb128 0x49
 1119 0061 13       		.uleb128 0x13
 1120 0062 38       		.uleb128 0x38
 1121 0063 0B       		.uleb128 0xb
 1122 0064 00       		.byte	0
 1123 0065 00       		.byte	0
 1124 0066 09       		.uleb128 0x9
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 33


 1125 0067 01       		.uleb128 0x1
 1126 0068 01       		.byte	0x1
 1127 0069 49       		.uleb128 0x49
 1128 006a 13       		.uleb128 0x13
 1129 006b 01       		.uleb128 0x1
 1130 006c 13       		.uleb128 0x13
 1131 006d 00       		.byte	0
 1132 006e 00       		.byte	0
 1133 006f 0A       		.uleb128 0xa
 1134 0070 21       		.uleb128 0x21
 1135 0071 00       		.byte	0
 1136 0072 49       		.uleb128 0x49
 1137 0073 13       		.uleb128 0x13
 1138 0074 2F       		.uleb128 0x2f
 1139 0075 0B       		.uleb128 0xb
 1140 0076 00       		.byte	0
 1141 0077 00       		.byte	0
 1142 0078 0B       		.uleb128 0xb
 1143 0079 0D       		.uleb128 0xd
 1144 007a 00       		.byte	0
 1145 007b 03       		.uleb128 0x3
 1146 007c 08       		.uleb128 0x8
 1147 007d 3A       		.uleb128 0x3a
 1148 007e 0B       		.uleb128 0xb
 1149 007f 3B       		.uleb128 0x3b
 1150 0080 0B       		.uleb128 0xb
 1151 0081 49       		.uleb128 0x49
 1152 0082 13       		.uleb128 0x13
 1153 0083 38       		.uleb128 0x38
 1154 0084 0B       		.uleb128 0xb
 1155 0085 00       		.byte	0
 1156 0086 00       		.byte	0
 1157 0087 0C       		.uleb128 0xc
 1158 0088 0F       		.uleb128 0xf
 1159 0089 00       		.byte	0
 1160 008a 0B       		.uleb128 0xb
 1161 008b 0B       		.uleb128 0xb
 1162 008c 49       		.uleb128 0x49
 1163 008d 13       		.uleb128 0x13
 1164 008e 00       		.byte	0
 1165 008f 00       		.byte	0
 1166 0090 0D       		.uleb128 0xd
 1167 0091 2E       		.uleb128 0x2e
 1168 0092 01       		.byte	0x1
 1169 0093 3F       		.uleb128 0x3f
 1170 0094 19       		.uleb128 0x19
 1171 0095 03       		.uleb128 0x3
 1172 0096 0E       		.uleb128 0xe
 1173 0097 3A       		.uleb128 0x3a
 1174 0098 0B       		.uleb128 0xb
 1175 0099 3B       		.uleb128 0x3b
 1176 009a 0B       		.uleb128 0xb
 1177 009b 27       		.uleb128 0x27
 1178 009c 19       		.uleb128 0x19
 1179 009d 49       		.uleb128 0x49
 1180 009e 13       		.uleb128 0x13
 1181 009f 11       		.uleb128 0x11
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 34


 1182 00a0 01       		.uleb128 0x1
 1183 00a1 12       		.uleb128 0x12
 1184 00a2 06       		.uleb128 0x6
 1185 00a3 40       		.uleb128 0x40
 1186 00a4 18       		.uleb128 0x18
 1187 00a5 9742     		.uleb128 0x2117
 1188 00a7 19       		.uleb128 0x19
 1189 00a8 01       		.uleb128 0x1
 1190 00a9 13       		.uleb128 0x13
 1191 00aa 00       		.byte	0
 1192 00ab 00       		.byte	0
 1193 00ac 0E       		.uleb128 0xe
 1194 00ad 05       		.uleb128 0x5
 1195 00ae 00       		.byte	0
 1196 00af 03       		.uleb128 0x3
 1197 00b0 0E       		.uleb128 0xe
 1198 00b1 3A       		.uleb128 0x3a
 1199 00b2 0B       		.uleb128 0xb
 1200 00b3 3B       		.uleb128 0x3b
 1201 00b4 0B       		.uleb128 0xb
 1202 00b5 49       		.uleb128 0x49
 1203 00b6 13       		.uleb128 0x13
 1204 00b7 02       		.uleb128 0x2
 1205 00b8 17       		.uleb128 0x17
 1206 00b9 00       		.byte	0
 1207 00ba 00       		.byte	0
 1208 00bb 0F       		.uleb128 0xf
 1209 00bc 34       		.uleb128 0x34
 1210 00bd 00       		.byte	0
 1211 00be 03       		.uleb128 0x3
 1212 00bf 08       		.uleb128 0x8
 1213 00c0 3A       		.uleb128 0x3a
 1214 00c1 0B       		.uleb128 0xb
 1215 00c2 3B       		.uleb128 0x3b
 1216 00c3 0B       		.uleb128 0xb
 1217 00c4 49       		.uleb128 0x49
 1218 00c5 13       		.uleb128 0x13
 1219 00c6 02       		.uleb128 0x2
 1220 00c7 17       		.uleb128 0x17
 1221 00c8 00       		.byte	0
 1222 00c9 00       		.byte	0
 1223 00ca 10       		.uleb128 0x10
 1224 00cb 34       		.uleb128 0x34
 1225 00cc 00       		.byte	0
 1226 00cd 03       		.uleb128 0x3
 1227 00ce 0E       		.uleb128 0xe
 1228 00cf 3A       		.uleb128 0x3a
 1229 00d0 0B       		.uleb128 0xb
 1230 00d1 3B       		.uleb128 0x3b
 1231 00d2 0B       		.uleb128 0xb
 1232 00d3 49       		.uleb128 0x49
 1233 00d4 13       		.uleb128 0x13
 1234 00d5 02       		.uleb128 0x2
 1235 00d6 17       		.uleb128 0x17
 1236 00d7 00       		.byte	0
 1237 00d8 00       		.byte	0
 1238 00d9 11       		.uleb128 0x11
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 35


 1239 00da 26       		.uleb128 0x26
 1240 00db 00       		.byte	0
 1241 00dc 49       		.uleb128 0x49
 1242 00dd 13       		.uleb128 0x13
 1243 00de 00       		.byte	0
 1244 00df 00       		.byte	0
 1245 00e0 12       		.uleb128 0x12
 1246 00e1 2E       		.uleb128 0x2e
 1247 00e2 01       		.byte	0x1
 1248 00e3 3F       		.uleb128 0x3f
 1249 00e4 19       		.uleb128 0x19
 1250 00e5 03       		.uleb128 0x3
 1251 00e6 0E       		.uleb128 0xe
 1252 00e7 3A       		.uleb128 0x3a
 1253 00e8 0B       		.uleb128 0xb
 1254 00e9 3B       		.uleb128 0x3b
 1255 00ea 0B       		.uleb128 0xb
 1256 00eb 27       		.uleb128 0x27
 1257 00ec 19       		.uleb128 0x19
 1258 00ed 11       		.uleb128 0x11
 1259 00ee 01       		.uleb128 0x1
 1260 00ef 12       		.uleb128 0x12
 1261 00f0 06       		.uleb128 0x6
 1262 00f1 40       		.uleb128 0x40
 1263 00f2 18       		.uleb128 0x18
 1264 00f3 9742     		.uleb128 0x2117
 1265 00f5 19       		.uleb128 0x19
 1266 00f6 01       		.uleb128 0x1
 1267 00f7 13       		.uleb128 0x13
 1268 00f8 00       		.byte	0
 1269 00f9 00       		.byte	0
 1270 00fa 13       		.uleb128 0x13
 1271 00fb 0B       		.uleb128 0xb
 1272 00fc 01       		.byte	0x1
 1273 00fd 11       		.uleb128 0x11
 1274 00fe 01       		.uleb128 0x1
 1275 00ff 12       		.uleb128 0x12
 1276 0100 06       		.uleb128 0x6
 1277 0101 00       		.byte	0
 1278 0102 00       		.byte	0
 1279 0103 14       		.uleb128 0x14
 1280 0104 2E       		.uleb128 0x2e
 1281 0105 01       		.byte	0x1
 1282 0106 3F       		.uleb128 0x3f
 1283 0107 19       		.uleb128 0x19
 1284 0108 03       		.uleb128 0x3
 1285 0109 0E       		.uleb128 0xe
 1286 010a 3A       		.uleb128 0x3a
 1287 010b 0B       		.uleb128 0xb
 1288 010c 3B       		.uleb128 0x3b
 1289 010d 05       		.uleb128 0x5
 1290 010e 27       		.uleb128 0x27
 1291 010f 19       		.uleb128 0x19
 1292 0110 49       		.uleb128 0x49
 1293 0111 13       		.uleb128 0x13
 1294 0112 11       		.uleb128 0x11
 1295 0113 01       		.uleb128 0x1
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 36


 1296 0114 12       		.uleb128 0x12
 1297 0115 06       		.uleb128 0x6
 1298 0116 40       		.uleb128 0x40
 1299 0117 18       		.uleb128 0x18
 1300 0118 9742     		.uleb128 0x2117
 1301 011a 19       		.uleb128 0x19
 1302 011b 01       		.uleb128 0x1
 1303 011c 13       		.uleb128 0x13
 1304 011d 00       		.byte	0
 1305 011e 00       		.byte	0
 1306 011f 15       		.uleb128 0x15
 1307 0120 34       		.uleb128 0x34
 1308 0121 00       		.byte	0
 1309 0122 03       		.uleb128 0x3
 1310 0123 0E       		.uleb128 0xe
 1311 0124 3A       		.uleb128 0x3a
 1312 0125 0B       		.uleb128 0xb
 1313 0126 3B       		.uleb128 0x3b
 1314 0127 05       		.uleb128 0x5
 1315 0128 49       		.uleb128 0x49
 1316 0129 13       		.uleb128 0x13
 1317 012a 02       		.uleb128 0x2
 1318 012b 17       		.uleb128 0x17
 1319 012c 00       		.byte	0
 1320 012d 00       		.byte	0
 1321 012e 16       		.uleb128 0x16
 1322 012f 34       		.uleb128 0x34
 1323 0130 00       		.byte	0
 1324 0131 03       		.uleb128 0x3
 1325 0132 08       		.uleb128 0x8
 1326 0133 3A       		.uleb128 0x3a
 1327 0134 0B       		.uleb128 0xb
 1328 0135 3B       		.uleb128 0x3b
 1329 0136 05       		.uleb128 0x5
 1330 0137 49       		.uleb128 0x49
 1331 0138 13       		.uleb128 0x13
 1332 0139 02       		.uleb128 0x2
 1333 013a 17       		.uleb128 0x17
 1334 013b 00       		.byte	0
 1335 013c 00       		.byte	0
 1336 013d 17       		.uleb128 0x17
 1337 013e 2E       		.uleb128 0x2e
 1338 013f 01       		.byte	0x1
 1339 0140 3F       		.uleb128 0x3f
 1340 0141 19       		.uleb128 0x19
 1341 0142 03       		.uleb128 0x3
 1342 0143 0E       		.uleb128 0xe
 1343 0144 3A       		.uleb128 0x3a
 1344 0145 0B       		.uleb128 0xb
 1345 0146 3B       		.uleb128 0x3b
 1346 0147 05       		.uleb128 0x5
 1347 0148 27       		.uleb128 0x27
 1348 0149 19       		.uleb128 0x19
 1349 014a 11       		.uleb128 0x11
 1350 014b 01       		.uleb128 0x1
 1351 014c 12       		.uleb128 0x12
 1352 014d 06       		.uleb128 0x6
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 37


 1353 014e 40       		.uleb128 0x40
 1354 014f 18       		.uleb128 0x18
 1355 0150 9742     		.uleb128 0x2117
 1356 0152 19       		.uleb128 0x19
 1357 0153 01       		.uleb128 0x1
 1358 0154 13       		.uleb128 0x13
 1359 0155 00       		.byte	0
 1360 0156 00       		.byte	0
 1361 0157 18       		.uleb128 0x18
 1362 0158 05       		.uleb128 0x5
 1363 0159 00       		.byte	0
 1364 015a 03       		.uleb128 0x3
 1365 015b 0E       		.uleb128 0xe
 1366 015c 3A       		.uleb128 0x3a
 1367 015d 0B       		.uleb128 0xb
 1368 015e 3B       		.uleb128 0x3b
 1369 015f 05       		.uleb128 0x5
 1370 0160 49       		.uleb128 0x49
 1371 0161 13       		.uleb128 0x13
 1372 0162 02       		.uleb128 0x2
 1373 0163 17       		.uleb128 0x17
 1374 0164 00       		.byte	0
 1375 0165 00       		.byte	0
 1376 0166 19       		.uleb128 0x19
 1377 0167 34       		.uleb128 0x34
 1378 0168 00       		.byte	0
 1379 0169 03       		.uleb128 0x3
 1380 016a 0E       		.uleb128 0xe
 1381 016b 3A       		.uleb128 0x3a
 1382 016c 0B       		.uleb128 0xb
 1383 016d 3B       		.uleb128 0x3b
 1384 016e 05       		.uleb128 0x5
 1385 016f 49       		.uleb128 0x49
 1386 0170 13       		.uleb128 0x13
 1387 0171 02       		.uleb128 0x2
 1388 0172 18       		.uleb128 0x18
 1389 0173 00       		.byte	0
 1390 0174 00       		.byte	0
 1391 0175 1A       		.uleb128 0x1a
 1392 0176 898201   		.uleb128 0x4109
 1393 0179 01       		.byte	0x1
 1394 017a 11       		.uleb128 0x11
 1395 017b 01       		.uleb128 0x1
 1396 017c 31       		.uleb128 0x31
 1397 017d 13       		.uleb128 0x13
 1398 017e 00       		.byte	0
 1399 017f 00       		.byte	0
 1400 0180 1B       		.uleb128 0x1b
 1401 0181 8A8201   		.uleb128 0x410a
 1402 0184 00       		.byte	0
 1403 0185 02       		.uleb128 0x2
 1404 0186 18       		.uleb128 0x18
 1405 0187 9142     		.uleb128 0x2111
 1406 0189 18       		.uleb128 0x18
 1407 018a 00       		.byte	0
 1408 018b 00       		.byte	0
 1409 018c 1C       		.uleb128 0x1c
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 38


 1410 018d 34       		.uleb128 0x34
 1411 018e 00       		.byte	0
 1412 018f 03       		.uleb128 0x3
 1413 0190 0E       		.uleb128 0xe
 1414 0191 3A       		.uleb128 0x3a
 1415 0192 0B       		.uleb128 0xb
 1416 0193 3B       		.uleb128 0x3b
 1417 0194 05       		.uleb128 0x5
 1418 0195 49       		.uleb128 0x49
 1419 0196 13       		.uleb128 0x13
 1420 0197 3F       		.uleb128 0x3f
 1421 0198 19       		.uleb128 0x19
 1422 0199 3C       		.uleb128 0x3c
 1423 019a 19       		.uleb128 0x19
 1424 019b 00       		.byte	0
 1425 019c 00       		.byte	0
 1426 019d 1D       		.uleb128 0x1d
 1427 019e 21       		.uleb128 0x21
 1428 019f 00       		.byte	0
 1429 01a0 00       		.byte	0
 1430 01a1 00       		.byte	0
 1431 01a2 1E       		.uleb128 0x1e
 1432 01a3 34       		.uleb128 0x34
 1433 01a4 00       		.byte	0
 1434 01a5 03       		.uleb128 0x3
 1435 01a6 0E       		.uleb128 0xe
 1436 01a7 3A       		.uleb128 0x3a
 1437 01a8 0B       		.uleb128 0xb
 1438 01a9 3B       		.uleb128 0x3b
 1439 01aa 0B       		.uleb128 0xb
 1440 01ab 49       		.uleb128 0x49
 1441 01ac 13       		.uleb128 0x13
 1442 01ad 3F       		.uleb128 0x3f
 1443 01ae 19       		.uleb128 0x19
 1444 01af 3C       		.uleb128 0x3c
 1445 01b0 19       		.uleb128 0x19
 1446 01b1 00       		.byte	0
 1447 01b2 00       		.byte	0
 1448 01b3 1F       		.uleb128 0x1f
 1449 01b4 2E       		.uleb128 0x2e
 1450 01b5 00       		.byte	0
 1451 01b6 3F       		.uleb128 0x3f
 1452 01b7 19       		.uleb128 0x19
 1453 01b8 3C       		.uleb128 0x3c
 1454 01b9 19       		.uleb128 0x19
 1455 01ba 6E       		.uleb128 0x6e
 1456 01bb 0E       		.uleb128 0xe
 1457 01bc 03       		.uleb128 0x3
 1458 01bd 0E       		.uleb128 0xe
 1459 01be 3A       		.uleb128 0x3a
 1460 01bf 0B       		.uleb128 0xb
 1461 01c0 3B       		.uleb128 0x3b
 1462 01c1 0B       		.uleb128 0xb
 1463 01c2 00       		.byte	0
 1464 01c3 00       		.byte	0
 1465 01c4 00       		.byte	0
 1466              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 39


 1467              	.Ldebug_loc0:
 1468              	.LLST0:
 1469 0000 00000000 		.4byte	.LVL0
 1470 0004 CA000000 		.4byte	.LVL24
 1471 0008 0100     		.2byte	0x1
 1472 000a 50       		.byte	0x50
 1473 000b CA000000 		.4byte	.LVL24
 1474 000f DC000000 		.4byte	.LFE63
 1475 0013 0400     		.2byte	0x4
 1476 0015 F3       		.byte	0xf3
 1477 0016 01       		.uleb128 0x1
 1478 0017 50       		.byte	0x50
 1479 0018 9F       		.byte	0x9f
 1480 0019 00000000 		.4byte	0
 1481 001d 00000000 		.4byte	0
 1482              	.LLST1:
 1483 0021 08000000 		.4byte	.LVL2
 1484 0025 B2000000 		.4byte	.LVL18
 1485 0029 0100     		.2byte	0x1
 1486 002b 52       		.byte	0x52
 1487 002c B4000000 		.4byte	.LVL19
 1488 0030 B6000000 		.4byte	.LVL20
 1489 0034 0100     		.2byte	0x1
 1490 0036 52       		.byte	0x52
 1491 0037 BA000000 		.4byte	.LVL21
 1492 003b C4000000 		.4byte	.LVL23
 1493 003f 0100     		.2byte	0x1
 1494 0041 52       		.byte	0x52
 1495 0042 00000000 		.4byte	0
 1496 0046 00000000 		.4byte	0
 1497              	.LLST2:
 1498 004a 5C000000 		.4byte	.LVL10
 1499 004e 60000000 		.4byte	.LVL11
 1500 0052 0200     		.2byte	0x2
 1501 0054 30       		.byte	0x30
 1502 0055 9F       		.byte	0x9f
 1503 0056 60000000 		.4byte	.LVL11
 1504 005a 7E000000 		.4byte	.LVL12
 1505 005e 0100     		.2byte	0x1
 1506 0060 53       		.byte	0x53
 1507 0061 80000000 		.4byte	.LVL13
 1508 0065 90000000 		.4byte	.LVL14
 1509 0069 0100     		.2byte	0x1
 1510 006b 53       		.byte	0x53
 1511 006c 00000000 		.4byte	0
 1512 0070 00000000 		.4byte	0
 1513              	.LLST3:
 1514 0074 08000000 		.4byte	.LVL2
 1515 0078 B6000000 		.4byte	.LVL20
 1516 007c 0100     		.2byte	0x1
 1517 007e 57       		.byte	0x57
 1518 007f BA000000 		.4byte	.LVL21
 1519 0083 C4000000 		.4byte	.LVL23
 1520 0087 0100     		.2byte	0x1
 1521 0089 57       		.byte	0x57
 1522 008a 00000000 		.4byte	0
 1523 008e 00000000 		.4byte	0
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 40


 1524              	.LLST4:
 1525 0092 02000000 		.4byte	.LVL1
 1526 0096 08000000 		.4byte	.LVL2
 1527 009a 0200     		.2byte	0x2
 1528 009c 30       		.byte	0x30
 1529 009d 9F       		.byte	0x9f
 1530 009e 08000000 		.4byte	.LVL2
 1531 00a2 C2000000 		.4byte	.LVL22
 1532 00a6 0100     		.2byte	0x1
 1533 00a8 56       		.byte	0x56
 1534 00a9 C4000000 		.4byte	.LVL23
 1535 00ad CC000000 		.4byte	.LVL25
 1536 00b1 0100     		.2byte	0x1
 1537 00b3 56       		.byte	0x56
 1538 00b4 00000000 		.4byte	0
 1539 00b8 00000000 		.4byte	0
 1540              	.LLST5:
 1541 00bc 02000000 		.4byte	.LVL1
 1542 00c0 08000000 		.4byte	.LVL2
 1543 00c4 0200     		.2byte	0x2
 1544 00c6 31       		.byte	0x31
 1545 00c7 9F       		.byte	0x9f
 1546 00c8 08000000 		.4byte	.LVL2
 1547 00cc 20000000 		.4byte	.LVL5
 1548 00d0 0100     		.2byte	0x1
 1549 00d2 51       		.byte	0x51
 1550 00d3 A8000000 		.4byte	.LVL15
 1551 00d7 AA000000 		.4byte	.LVL16
 1552 00db 0200     		.2byte	0x2
 1553 00dd 30       		.byte	0x30
 1554 00de 9F       		.byte	0x9f
 1555 00df AA000000 		.4byte	.LVL16
 1556 00e3 DC000000 		.4byte	.LFE63
 1557 00e7 0100     		.2byte	0x1
 1558 00e9 51       		.byte	0x51
 1559 00ea 00000000 		.4byte	0
 1560 00ee 00000000 		.4byte	0
 1561              	.LLST6:
 1562 00f2 16000000 		.4byte	.LVL3
 1563 00f6 1E000000 		.4byte	.LVL4
 1564 00fa 0200     		.2byte	0x2
 1565 00fc 30       		.byte	0x30
 1566 00fd 9F       		.byte	0x9f
 1567 00fe 1E000000 		.4byte	.LVL4
 1568 0102 4E000000 		.4byte	.LVL7
 1569 0106 0100     		.2byte	0x1
 1570 0108 53       		.byte	0x53
 1571 0109 4E000000 		.4byte	.LVL7
 1572 010d 50000000 		.4byte	.LVL8
 1573 0111 0100     		.2byte	0x1
 1574 0113 5E       		.byte	0x5e
 1575 0114 50000000 		.4byte	.LVL8
 1576 0118 54000000 		.4byte	.LVL9
 1577 011c 0100     		.2byte	0x1
 1578 011e 53       		.byte	0x53
 1579 011f 54000000 		.4byte	.LVL9
 1580 0123 AA000000 		.4byte	.LVL16
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 41


 1581 0127 0100     		.2byte	0x1
 1582 0129 5E       		.byte	0x5e
 1583 012a 00000000 		.4byte	0
 1584 012e 00000000 		.4byte	0
 1585              	.LLST7:
 1586 0132 00000000 		.4byte	.LVL26
 1587 0136 06000000 		.4byte	.LVL27
 1588 013a 0100     		.2byte	0x1
 1589 013c 50       		.byte	0x50
 1590 013d 06000000 		.4byte	.LVL27
 1591 0141 1C000000 		.4byte	.LFE64
 1592 0145 0400     		.2byte	0x4
 1593 0147 F3       		.byte	0xf3
 1594 0148 01       		.uleb128 0x1
 1595 0149 50       		.byte	0x50
 1596 014a 9F       		.byte	0x9f
 1597 014b 00000000 		.4byte	0
 1598 014f 00000000 		.4byte	0
 1599              	.LLST8:
 1600 0153 00000000 		.4byte	.LVL28
 1601 0157 3C000000 		.4byte	.LVL33
 1602 015b 0200     		.2byte	0x2
 1603 015d 30       		.byte	0x30
 1604 015e 9F       		.byte	0x9f
 1605 015f 3C000000 		.4byte	.LVL33
 1606 0163 4C000000 		.4byte	.LFE65
 1607 0167 0100     		.2byte	0x1
 1608 0169 50       		.byte	0x50
 1609 016a 00000000 		.4byte	0
 1610 016e 00000000 		.4byte	0
 1611              	.LLST9:
 1612 0172 0E000000 		.4byte	.LVL29
 1613 0176 26000000 		.4byte	.LVL30
 1614 017a 0100     		.2byte	0x1
 1615 017c 53       		.byte	0x53
 1616 017d 28000000 		.4byte	.LVL31
 1617 0181 30000000 		.4byte	.LVL32
 1618 0185 0100     		.2byte	0x1
 1619 0187 53       		.byte	0x53
 1620 0188 00000000 		.4byte	0
 1621 018c 00000000 		.4byte	0
 1622              	.LLST10:
 1623 0190 00000000 		.4byte	.LVL34
 1624 0194 3C000000 		.4byte	.LVL39
 1625 0198 0200     		.2byte	0x2
 1626 019a 30       		.byte	0x30
 1627 019b 9F       		.byte	0x9f
 1628 019c 3C000000 		.4byte	.LVL39
 1629 01a0 4C000000 		.4byte	.LFE66
 1630 01a4 0100     		.2byte	0x1
 1631 01a6 50       		.byte	0x50
 1632 01a7 00000000 		.4byte	0
 1633 01ab 00000000 		.4byte	0
 1634              	.LLST11:
 1635 01af 0E000000 		.4byte	.LVL35
 1636 01b3 26000000 		.4byte	.LVL36
 1637 01b7 0100     		.2byte	0x1
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 42


 1638 01b9 53       		.byte	0x53
 1639 01ba 28000000 		.4byte	.LVL37
 1640 01be 30000000 		.4byte	.LVL38
 1641 01c2 0100     		.2byte	0x1
 1642 01c4 53       		.byte	0x53
 1643 01c5 00000000 		.4byte	0
 1644 01c9 00000000 		.4byte	0
 1645              	.LLST12:
 1646 01cd 00000000 		.4byte	.LVL40
 1647 01d1 28000000 		.4byte	.LVL42
 1648 01d5 0100     		.2byte	0x1
 1649 01d7 50       		.byte	0x50
 1650 01d8 28000000 		.4byte	.LVL42
 1651 01dc 50000000 		.4byte	.LFE67
 1652 01e0 0400     		.2byte	0x4
 1653 01e2 F3       		.byte	0xf3
 1654 01e3 01       		.uleb128 0x1
 1655 01e4 50       		.byte	0x50
 1656 01e5 9F       		.byte	0x9f
 1657 01e6 00000000 		.4byte	0
 1658 01ea 00000000 		.4byte	0
 1659              	.LLST13:
 1660 01ee 24000000 		.4byte	.LVL41
 1661 01f2 3F000000 		.4byte	.LVL44-1
 1662 01f6 0100     		.2byte	0x1
 1663 01f8 51       		.byte	0x51
 1664 01f9 00000000 		.4byte	0
 1665 01fd 00000000 		.4byte	0
 1666              	.LLST14:
 1667 0201 24000000 		.4byte	.LVL41
 1668 0205 28000000 		.4byte	.LVL42
 1669 0209 0200     		.2byte	0x2
 1670 020b 30       		.byte	0x30
 1671 020c 9F       		.byte	0x9f
 1672 020d 28000000 		.4byte	.LVL42
 1673 0211 3F000000 		.4byte	.LVL44-1
 1674 0215 0100     		.2byte	0x1
 1675 0217 53       		.byte	0x53
 1676 0218 00000000 		.4byte	0
 1677 021c 00000000 		.4byte	0
 1678              		.section	.debug_aranges,"",%progbits
 1679 0000 3C000000 		.4byte	0x3c
 1680 0004 0200     		.2byte	0x2
 1681 0006 00000000 		.4byte	.Ldebug_info0
 1682 000a 04       		.byte	0x4
 1683 000b 00       		.byte	0
 1684 000c 0000     		.2byte	0
 1685 000e 0000     		.2byte	0
 1686 0010 00000000 		.4byte	.LFB63
 1687 0014 DC000000 		.4byte	.LFE63-.LFB63
 1688 0018 00000000 		.4byte	.LFB64
 1689 001c 1C000000 		.4byte	.LFE64-.LFB64
 1690 0020 00000000 		.4byte	.LFB65
 1691 0024 4C000000 		.4byte	.LFE65-.LFB65
 1692 0028 00000000 		.4byte	.LFB66
 1693 002c 4C000000 		.4byte	.LFE66-.LFB66
 1694 0030 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 43


 1695 0034 50000000 		.4byte	.LFE67-.LFB67
 1696 0038 00000000 		.4byte	0
 1697 003c 00000000 		.4byte	0
 1698              		.section	.debug_ranges,"",%progbits
 1699              	.Ldebug_ranges0:
 1700 0000 00000000 		.4byte	.LFB63
 1701 0004 DC000000 		.4byte	.LFE63
 1702 0008 00000000 		.4byte	.LFB64
 1703 000c 1C000000 		.4byte	.LFE64
 1704 0010 00000000 		.4byte	.LFB65
 1705 0014 4C000000 		.4byte	.LFE65
 1706 0018 00000000 		.4byte	.LFB66
 1707 001c 4C000000 		.4byte	.LFE66
 1708 0020 00000000 		.4byte	.LFB67
 1709 0024 50000000 		.4byte	.LFE67
 1710 0028 00000000 		.4byte	0
 1711 002c 00000000 		.4byte	0
 1712              		.section	.debug_line,"",%progbits
 1713              	.Ldebug_line0:
 1714 0000 9F020000 		.section	.debug_str,"MS",%progbits,1
 1714      02007001 
 1714      00000201 
 1714      FB0E0D00 
 1714      01010101 
 1715              	.LASF57:
 1716 0000 63616E5F 		.ascii	"can_receive\000"
 1716      72656365 
 1716      69766500 
 1717              	.LASF41:
 1718 000c 72657375 		.ascii	"result\000"
 1718      6C7400
 1719              	.LASF56:
 1720 0013 433A5C63 		.ascii	"C:\\cygwin\\home\\ianrd\\FRUCD-Dashboard\\Dashboard"
 1720      79677769 
 1720      6E5C686F 
 1720      6D655C69 
 1720      616E7264 
 1721 0041 2E637964 		.ascii	".cydsn\000"
 1721      736E00
 1722              	.LASF24:
 1723 0048 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1723      44415441 
 1723      5F425954 
 1723      455300
 1724              	.LASF2:
 1725 0057 73686F72 		.ascii	"short int\000"
 1725      7420696E 
 1725      7400
 1726              	.LASF49:
 1727 0061 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1727      52656365 
 1727      6976654D 
 1727      736700
 1728              	.LASF21:
 1729 0070 73697A65 		.ascii	"sizetype\000"
 1729      74797065 
 1729      00
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 44


 1730              	.LASF37:
 1731 0079 74786461 		.ascii	"txdata\000"
 1731      746100
 1732              	.LASF29:
 1733 0080 72786461 		.ascii	"rxdata\000"
 1733      746100
 1734              	.LASF48:
 1735 0087 43414E5F 		.ascii	"CAN_TxCancel\000"
 1735      54784361 
 1735      6E63656C 
 1735      00
 1736              	.LASF40:
 1737 0094 72657472 		.ascii	"retry\000"
 1737      7900
 1738              	.LASF11:
 1739 009a 75696E74 		.ascii	"uint8_t\000"
 1739      385F7400 
 1740              	.LASF13:
 1741 00a2 75696E74 		.ascii	"uint8\000"
 1741      3800
 1742              	.LASF28:
 1743 00a8 72786964 		.ascii	"rxid\000"
 1743      00
 1744              	.LASF31:
 1745 00ad 72786163 		.ascii	"rxacr\000"
 1745      7200
 1746              	.LASF15:
 1747 00b3 666C6F61 		.ascii	"float\000"
 1747      7400
 1748              	.LASF8:
 1749 00b9 6C6F6E67 		.ascii	"long long int\000"
 1749      206C6F6E 
 1749      6720696E 
 1749      7400
 1750              	.LASF25:
 1751 00c7 43414E5F 		.ascii	"CAN_REG_32\000"
 1751      5245475F 
 1751      333200
 1752              	.LASF35:
 1753 00d2 7478636D 		.ascii	"txcmd\000"
 1753      6400
 1754              	.LASF6:
 1755 00d8 6C6F6E67 		.ascii	"long int\000"
 1755      20696E74 
 1755      00
 1756              	.LASF39:
 1757 00e1 73686966 		.ascii	"shift\000"
 1757      7400
 1758              	.LASF7:
 1759 00e7 6C6F6E67 		.ascii	"long unsigned int\000"
 1759      20756E73 
 1759      69676E65 
 1759      6420696E 
 1759      7400
 1760              	.LASF4:
 1761 00f9 5F5F7569 		.ascii	"__uint8_t\000"
 1761      6E74385F 
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 45


 1761      7400
 1762              	.LASF46:
 1763 0103 43414E5F 		.ascii	"CAN_SendMsgDash_status\000"
 1763      53656E64 
 1763      4D736744 
 1763      6173685F 
 1763      73746174 
 1764              	.LASF23:
 1765 011a 62797465 		.ascii	"byte\000"
 1765      00
 1766              	.LASF47:
 1767 011f 43414E5F 		.ascii	"CAN_SendMsgDash_cmd\000"
 1767      53656E64 
 1767      4D736744 
 1767      6173685F 
 1767      636D6400 
 1768              	.LASF20:
 1769 0133 6C6F6E67 		.ascii	"long double\000"
 1769      20646F75 
 1769      626C6500 
 1770              	.LASF32:
 1771 013f 7278616D 		.ascii	"rxamrd\000"
 1771      726400
 1772              	.LASF1:
 1773 0146 756E7369 		.ascii	"unsigned char\000"
 1773      676E6564 
 1773      20636861 
 1773      7200
 1774              	.LASF0:
 1775 0154 7369676E 		.ascii	"signed char\000"
 1775      65642063 
 1775      68617200 
 1776              	.LASF9:
 1777 0160 6C6F6E67 		.ascii	"long long unsigned int\000"
 1777      206C6F6E 
 1777      6720756E 
 1777      7369676E 
 1777      65642069 
 1778              	.LASF10:
 1779 0177 756E7369 		.ascii	"unsigned int\000"
 1779      676E6564 
 1779      20696E74 
 1779      00
 1780              	.LASF22:
 1781 0184 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 1781      44415441 
 1781      5F425954 
 1781      45535F4D 
 1781      534700
 1782              	.LASF19:
 1783 0197 72656733 		.ascii	"reg32\000"
 1783      3200
 1784              	.LASF3:
 1785 019d 73686F72 		.ascii	"short unsigned int\000"
 1785      7420756E 
 1785      7369676E 
 1785      65642069 
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 46


 1785      6E7400
 1786              	.LASF17:
 1787 01b0 63686172 		.ascii	"char\000"
 1787      00
 1788              	.LASF34:
 1789 01b5 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1789      52585F53 
 1789      54525543 
 1789      5400
 1790              	.LASF50:
 1791 01c3 72784D61 		.ascii	"rxMailbox\000"
 1791      696C626F 
 1791      7800
 1792              	.LASF12:
 1793 01cd 696E7433 		.ascii	"int32_t\000"
 1793      325F7400 
 1794              	.LASF27:
 1795 01d5 7278636D 		.ascii	"rxcmd\000"
 1795      6400
 1796              	.LASF51:
 1797 01db 64617461 		.ascii	"data\000"
 1797      00
 1798              	.LASF38:
 1799 01e0 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1799      54585F53 
 1799      54525543 
 1799      5400
 1800              	.LASF53:
 1801 01ee 63616E5F 		.ascii	"can_buffer\000"
 1801      62756666 
 1801      657200
 1802              	.LASF14:
 1803 01f9 75696E74 		.ascii	"uint32\000"
 1803      333200
 1804              	.LASF18:
 1805 0200 72656738 		.ascii	"reg8\000"
 1805      00
 1806              	.LASF43:
 1807 0205 6D657373 		.ascii	"message\000"
 1807      61676500 
 1808              	.LASF26:
 1809 020d 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1809      54585F4D 
 1809      534700
 1810              	.LASF45:
 1811 0218 43414E5F 		.ascii	"CAN_SendMsg\000"
 1811      53656E64 
 1811      4D736700 
 1812              	.LASF44:
 1813 0224 62756666 		.ascii	"bufferId\000"
 1813      65724964 
 1813      00
 1814              	.LASF36:
 1815 022d 74786964 		.ascii	"txid\000"
 1815      00
 1816              	.LASF5:
 1817 0232 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\ianrd\AppData\Local\Temp\ccJ8b3Fg.s 			page 47


 1817      7433325F 
 1817      7400
 1818              	.LASF55:
 1819 023c 47656E65 		.ascii	"Generated_Source\\PSoC5\\CAN_TX_RX_func.c\000"
 1819      72617465 
 1819      645F536F 
 1819      75726365 
 1819      5C50536F 
 1820              	.LASF33:
 1821 0264 72786163 		.ascii	"rxacrd\000"
 1821      726400
 1822              	.LASF16:
 1823 026b 646F7562 		.ascii	"double\000"
 1823      6C6500
 1824              	.LASF42:
 1825 0272 72656754 		.ascii	"regTemp\000"
 1825      656D7000 
 1826              	.LASF52:
 1827 027a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1827      52784275 
 1827      66666572 
 1827      00
 1828              	.LASF54:
 1829 0287 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1829      43313120 
 1829      352E342E 
 1829      31203230 
 1829      31363036 
 1830 02ba 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1830      20726576 
 1830      6973696F 
 1830      6E203233 
 1830      37373135 
 1831 02ed 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1831      66756E63 
 1831      74696F6E 
 1831      2D736563 
 1831      74696F6E 
 1832              	.LASF30:
 1833 0315 7278616D 		.ascii	"rxamr\000"
 1833      7200
 1834              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
